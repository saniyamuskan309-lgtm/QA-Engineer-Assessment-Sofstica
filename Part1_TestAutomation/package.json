{
  "name": "part1_testautomation",
  "version": "1.0.0",
  "description": "This project automates an **End-to-End (E2E) purchase flow** on the Demo Web Shop website (https://demowebshop.tricentis.com/) using **Playwright** with a **Page Object Model (POM)** structure. It covers **user registration, login, product selection, cart, checkout, and order confirmation** with dynamic test data.\r ## Tech Stack\r - **Language:** JavaScript (Node.js)  \r - **Framework:** Playwright  \r - **Architecture:** Page Object Model (POM)  \r - **Test Data:** Data-driven (dynamic emails, dummy billing/shipping data)  \r - **Assertions:** Playwright `expect`\r ## Folder Structure\r project-root/  \r ├── pages/  \r │   ├── RegisterPage.js  \r │   ├── LoginPage.js  \r │   ├── PLP.js  \r │   ├── PDP.js  \r │   ├── CartPage.js  \r │   ├── CheckoutPage.js  \r │   └── DashboardPage.js  \r ├── test-data/  \r │   └── users.js  \r ├── tests/  \r │   └── E2E-Purchase-Flow.spec.js  \r ├── package.json  \r ├── playwright.config.js  \r └── README.md\r ## Setup Instructions\r 1. **Clone the repository**: \r git clone https://github.com/saniyamuskan309-lgtm/QA-Engineer-Assessment-Sofstica.git \r cd Part1-TestAutomation  \r 2. **Install dependencies**: npm ci , npx playwright install  \r 3. **Run tests**: npx playwright test  \r ## Notes\r - Ensure **Node.js** is installed (v16 or above recommended).  \r - Test data is dynamically generated to avoid duplicate user conflicts.",
  "main": "playwright.config.js",
  "directories": {
    "test": "tests"
  },
  "dependencies": {
    "playwright": "^1.55.0",
    "playwright-core": "^1.55.0"
  },
  "devDependencies": {
    "@playwright/test": "^1.55.0"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "keywords": [],
  "author": "",
  "license": "ISC"
}
